static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: service_grpc

                http_filters:
                - name: envoy.filters.http.jwt_authn
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                    providers:
                      my-jwt:
                        issuer: foo.bar
                        audiences:
                        - bar.bar
                        local_jwks:
                          filename: key_jwk.json
                        from_headers:
                        - name: Authorization
                          value_prefix: "Bearer "
                        payload_in_metadata: verified_jwt
                    rules:
                    - match:
                        prefix: "/"
                      requires:
                        provider_name: "my-jwt"
                - name: envoy.filters.http.ext_authz
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                    transport_api_version: V3
                    failure_mode_allow: false
                    metadata_context_namespaces:
                      - envoy.filters.http.jwt_authn
                    with_request_body:
                      allow_partial_message: true
                      max_request_bytes: 1024
                      pack_as_bytes: true                      
                    grpc_service:
                      google_grpc:
                        target_uri: 127.0.0.1:9191
                        stat_prefix: ext_authz
                      timeout: 3s
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain:
                    filename: ../certs/envoy.crt
                  private_key:
                    filename: ../certs/envoy.key

  clusters:
  - name: service_grpc
    type: static
    connect_timeout: 5s
    http2_protocol_options: {}
    load_assignment:
      cluster_name: service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 50051
    common_lb_config:
      healthy_panic_threshold:
        value: 50.0
    health_checks:
      - timeout: 1s
        interval: 5s
        interval_jitter: 1s
        no_traffic_interval: 5s
        unhealthy_threshold: 1
        healthy_threshold: 3
        grpc_health_check:
          service_name: "echo.EchoServer"
          authority: "grpc.domain.com"
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          validation_context:
            match_subject_alt_names:
              exact: "grpc.domain.com"
            trusted_ca:
              filename: "../certs/root-ca.crt"

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9000
